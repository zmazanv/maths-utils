#!/usr/bin/env python

import os
import subprocess
from typing import Callable
from math import sqrt

import matplotlib.pyplot as plt
import numpy as np


def plot_function(
    func: Callable,
    x_min: float,
    x_max: float,
    y_min: float,
    y_max: float,
    outpath: str,
) -> None:
    x = np.linspace(x_min, x_max, 400)

    with np.errstate(divide="ignore", invalid="ignore"):
        y = np.array([func(xv) for xv in x])
        y = np.where(np.isfinite(y), y, np.nan)

    plt.figure(figsize=(8, 6))
    plt.plot(x, y, label="f(x)")
    plt.xlabel("x")
    plt.ylabel("f(x)")
    plt.title("Graph of the f(x)")
    plt.legend()
    plt.grid(True)

    plt.ylim(y_min, y_max)

    plt.savefig(outpath)
    plt.close()


# This is incredibly unsafe. Avoid this.
# Only I am using this and its a short-term solution, so I'm
# leaving it for now.
func: Callable = eval(f"lambda x: {input("Enter f(x): ")}")
x_min: float = float(eval(input("Enter x min: ")))
x_max: float = float(eval(input("Enter x max: ")))
y_min: float = float(eval(input("Enter y min: ")))
y_max: float = float(eval(input("Enter y max: ")))
outpath: str = os.path.join(os.getcwd(), "plot.png")

plot_function(func, x_min, x_max, y_min, y_max, outpath)
subprocess.run(("chafa", outpath))
